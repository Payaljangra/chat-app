{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat-app\\\\client\\\\src\\\\components\\\\chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport { useLocation } from 'react-router-dom';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nexport default function Chat() {\n  _s();\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  const location = useLocation();\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      name,\n      room\n    });\n    return () => {\n      socket.disconnect();\n      socket.off();\n    };\n  }, [location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n  useEffect(() => {\n    socket.on('roomData', roomData => {\n      console.log('users', roomData.users);\n      setActiveUsers(roomData.users);\n    });\n  }, []);\n  const sendMessage = message => {\n    if (message) {\n      socket.emit('sendMessage', message);\n      setMessage('');\n    }\n  };\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: activeUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"PF5V8mSdFHTGP2R4+WKAeodtEh0=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","queryString","io","useLocation","InfoBar","Input","Messages","TextContainer","jsxDEV","_jsxDEV","socket","Chat","_s","name","setName","room","setRoom","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","ENDPOINT","location","parse","search","emit","disconnect","off","on","roomData","console","log","users","sendMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/chat-app/client/src/components/chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport queryString from 'query-string'\nimport io from 'socket.io-client'\nimport './Chat.css'\nimport { useLocation } from 'react-router-dom'\nimport InfoBar from '../InfoBar/InfoBar'\nimport Input from '../Input/Input'\nimport Messages from '../Messages/Messages'\nimport TextContainer from '../TextContainer/TextContainer'\n\n\nlet socket;\nexport default function Chat() {\n  const [name, setName] = useState('')\n  const [room, setRoom] = useState('')\n  const [message, setMessage] = useState('')\n  const [messages, setMessages] = useState([])\n  const [activeUsers, setActiveUsers] = useState([])\n  const ENDPOINT = 'localhost:5000'\n\n  const location = useLocation()\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search)\n    setName(name)\n    setRoom(room)\n    socket = io(ENDPOINT)\n    socket.emit('join', { name, room })\n    return () => {\n      socket.disconnect();\n      socket.off()\n    }\n  }, [location.search])\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessages([...messages, message])\n    })\n  }, [messages])\n\n  useEffect(() => {\n    socket.on('roomData', (roomData) => {\n      console.log('users', roomData.users);\n      setActiveUsers(roomData.users)\n    })\n  }, [])\n\n  const sendMessage = (message) => {\n    if (message) {\n      socket.emit('sendMessage', message)\n      setMessage('')\n    }\n  }\n  console.log(message, messages);\n  return (\n    <div className='outerContainer'>\n      <div className='container'>\n        <InfoBar room={room} name={name} />\n        <Messages messages={messages} name={name} />\n        <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n      </div>\n      <TextContainer users={activeUsers} />\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}